import React       from 'react';
import ReactCanvas from 'react-canvas';
import _           from 'lodash';
import Robot       from './Game/Robot.jsx';
const PT      =    React.PropTypes;
const Surface = ReactCanvas.Surface;
const Image = ReactCanvas.Image;
const Text = ReactCanvas.Text;
const surfaceWidth = 600;
const surfaceHeight = 600;

class Game extends React.Component {

  constructor(props) {
    super(props);
<<<<<<< HEAD:client/Game.jsx
    // var robot1 = {
    //   id: 1,
    //   name: 'Foo',
    //   x: 1,
    //   y: 4
    // }
    // var robot2 = {
    //   id: 2,
    //   name: 'Sonny',
    //   x: 10,
    //   y: 4
    // }
=======
>>>>>>> 898c4899a3c156d01ee1d0fc3c4843392e697dc2:client/Game.jsx.mick
    this.state = {robots: []}

    props.socket.on('server:loop', (state) => {
      console.log("STATE", state);
      // this.setState({robot: state.robots[0]})
      //this.setState({x: state.robots[0]['x'], y: state.robots[0]['y']})
<<<<<<< HEAD:client/Game.jsx
      this.setState({
        robots: state.robots
      });

=======
      //this.setState({robots: [{name: "Sonny", x: 10, y: 300}]})
      var robot = state.robots[0]
      this.setState({robots: [{name: robot['name'], x: robot['x'], y: robot['y']}]})
>>>>>>> 898c4899a3c156d01ee1d0fc3c4843392e697dc2:client/Game.jsx.mick
    });
  }



  renderRobots() {
    return _.map(this.state.robots, function(robot) {
      return <Robot key={robot.id} robot={robot} />;
    });
  }

<<<<<<< HEAD:client/Game.jsx
=======
  // Position the robot
  getImageStyle(robots) {
    if (robots != undefined) {

      if (robots.length > 0) {
        console.log("WE HAVE THE ROBOTS", robots)
        var robot = robots[0]
        if (robot != undefined){
          return {
            top: robot.y,
            left: robot.x,
            width: 40,
            height: 40
          };
        }
      } else {
        return {
          top: 0,
          left: 0,
          width: 40,
          height: 40
        };
      }
    }
  } 
  
>>>>>>> 898c4899a3c156d01ee1d0fc3c4843392e697dc2:client/Game.jsx.mick
  // The rendering...
  render() {
    const robots = this.state.robots;
    console.log("ROBOTS", robots);

    return (
      <div>
<<<<<<< HEAD:client/Game.jsx
        <Surface width={surfaceWidth} height={surfaceHeight} left={0} top={0}>
          {this.renderRobots()}
        </Surface>
=======
      <Surface width={surfaceWidth} height={surfaceHeight} left={0} top={0}>
      <Image style={this.getImageStyle(robots)} src="imgs/robot1.png" />
      <Text style={this.getTextStyle(robots)}>{this.getRobotName(robots)}</Text>
      </Surface>
>>>>>>> 898c4899a3c156d01ee1d0fc3c4843392e697dc2:client/Game.jsx.mick
      </div>
    );

  }

}

Game.propTypes = {
  socket: PT.object.isRequired
}

export default Game;
